{"version":3,"file":"prisma-redis-middleware.cjs.production.min.js","sources":["../src/cacheMethods.ts","../src/index.ts"],"sourcesContent":["import type { PrismaMutationAction, PrismaQueryAction } from \"./types\";\n\nexport const defaultCacheMethods: PrismaQueryAction[] = [\n  \"findUnique\",\n  \"findFirst\",\n  \"findMany\",\n  \"count\",\n  \"aggregate\",\n  \"groupBy\",\n  \"findRaw\",\n  \"aggregateRaw\",\n];\n\nexport const defaultMutationMethods: PrismaMutationAction[] = [\n  \"create\",\n  \"createMany\",\n  \"update\",\n  \"updateMany\",\n  \"upsert\",\n  \"delete\",\n  \"deleteMany\",\n  \"executeRawUnsafe\",\n];\n","import { createCache } from \"async-cache-dedupe\";\n\nimport { defaultCacheMethods, defaultMutationMethods } from \"./cacheMethods\";\nimport type {\n  CreatePrismaRedisCache,\n  FetchFromPrisma,\n  Middleware,\n  MiddlewareParams,\n  PrismaAction,\n  PrismaMutationAction,\n  PrismaQueryAction,\n  Result,\n} from \"./types\";\n\nconst DEFAULT_CACHE_TIME = 0;\n\nexport const createPrismaRedisCache = ({\n  models,\n  onDedupe,\n  onError,\n  onHit,\n  onMiss,\n  storage,\n  cacheTime = DEFAULT_CACHE_TIME,\n  excludeModels = [],\n  excludeMethods = [],\n  transformer,\n}: CreatePrismaRedisCache) => {\n  // Default options for \"async-cache-dedupe\"\n  const cacheOptions = {\n    onDedupe,\n    onError,\n    onHit,\n    onMiss,\n    storage,\n    ttl: cacheTime,\n    transformer,\n  };\n\n  const cache: any = createCache(cacheOptions);\n\n  const middleware: Middleware = async (params, next) => {\n    let result: Result;\n\n    // This function is used by `async-cache-dedupe` to fetch data when the cache is empty\n    const fetchFromPrisma: FetchFromPrisma = async (params) => {\n      return next(params);\n    };\n\n    // Do not cache any Prisma method specified in the defaultExcludeCacheMethods option\n    const excludedCacheMethods: PrismaAction[] = defaultCacheMethods.filter((cacheMethod) => {\n      return excludeMethods.includes(cacheMethod);\n    });\n\n    // Do not cache any Prisma method that has been excluded\n    if (!excludedCacheMethods?.includes(params.action)) {\n      // Add a cache function for each model specified in the models option\n      models?.forEach(({ model, cacheTime, cacheKey, excludeMethods }) => {\n        // Only define the cache function for a model if it doesn't exist yet and hasn't been excluded\n        if (\n          !cache[model] &&\n          model === params.model &&\n          !excludeModels?.includes(params.model) &&\n          !excludeMethods?.includes(params.action as PrismaQueryAction)\n        ) {\n          cache.define(\n            model,\n            {\n              references: ({ params }: { params: MiddlewareParams }, key: string) => {\n                return [`${cacheKey || params.model}~${key}`];\n              },\n              ttl: cacheTime || cacheOptions.ttl,\n            },\n            async function modelsFetch({ cb, params }: { cb: FetchFromPrisma; params: MiddlewareParams }) {\n              result = await cb(params);\n\n              return result;\n            },\n          );\n        }\n      });\n\n      // For each defined model in `models` we check if they defined any caching methods to be excluded\n      const excludedCacheMethodsInModels = models?.find(({ model, excludeMethods }) => {\n        return model === params.model && excludeMethods?.length;\n      });\n\n      // Do not define a cache function for any Prisma model if it already exists\n      // Do not define the cache function for a model if it was excluded in `defaultExcludeCacheModels`\n      // Do not define a cache function if the Prisma method was exluded in `models`\n      if (\n        !cache[params.model] &&\n        !excludeModels?.includes(params.model) &&\n        !excludedCacheMethodsInModels?.excludeMethods?.includes(params.action as PrismaQueryAction)\n      ) {\n        cache.define(\n          params.model,\n          {\n            references: ({ params }: { params: MiddlewareParams }, key: string) => {\n              return [`${params.model}~${key}`];\n            },\n          },\n          async function modelFetch({ cb, params }: { cb: FetchFromPrisma; params: MiddlewareParams }) {\n            result = await cb(params);\n\n            return result;\n          },\n        );\n      }\n    }\n\n    // Get the cache function relating to the Prisma model\n    const cacheFunction = cache[params.model];\n\n    // Only cache the data if the Prisma model hasn't been excluded and if the Prisma method wasn't excluded either\n    if (\n      !excludeModels?.includes(params.model) &&\n      !excludedCacheMethods?.includes(params.action) &&\n      !defaultMutationMethods?.includes(params.action as PrismaMutationAction) &&\n      typeof cacheFunction === \"function\"\n    ) {\n      try {\n        result = await cacheFunction({ cb: fetchFromPrisma, params });\n      } catch (err) {\n        // If we fail to fetch it from the cache (network error, etc.) we will query it from the database\n        result = await fetchFromPrisma(params);\n\n        console.error(err);\n      }\n    } else {\n      // Query the database for any Prisma method (mutation method) or Prisma model we excluded from the cache\n      result = await fetchFromPrisma(params);\n\n      // If we successfully executed the Mutation we clear and invalidate the cache for the Prisma model\n      if (defaultMutationMethods.includes(params.action as PrismaMutationAction)) {\n        await cache.invalidateAll(`*${params.model}~*`);\n\n        await Promise.all(\n          (models || [])\n            .filter(({ model }) => model === params.model)\n            .map(async ({ invalidateRelated }) => {\n              if (invalidateRelated) {\n                await Promise.all(\n                  invalidateRelated.map(async (relatedModel) => cache.invalidateAll(`*${relatedModel}~*`)),\n                );\n              }\n            }),\n        );\n      }\n    }\n\n    return result;\n  };\n\n  return middleware;\n};\n"],"names":["defaultCacheMethods","defaultMutationMethods","_ref","models","_ref$cacheTime","cacheTime","_ref$excludeModels","excludeModels","_ref$excludeMethods","excludeMethods","cacheOptions","onDedupe","onError","onHit","onMiss","storage","ttl","transformer","cache","createCache","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee6","params","next","result","fetchFromPrisma","excludedCacheMethods","_excludedCacheMethods","excludedCacheMethodsInModels","cacheFunction","wrap","_context6","prev","_ref3","_callee","_context","abrupt","stop","_x3","apply","arguments","filter","cacheMethod","includes","action","forEach","_ref4","model","cacheKey","define","references","_ref5","key","_modelsFetch","_callee2","_ref6","cb","_context2","sent","_x4","find","_ref7","length","_ref8","_modelFetch","_callee3","_ref9","_context3","_x5","t0","console","error","invalidateAll","Promise","all","_ref10","map","_ref12","_callee5","_ref11","invalidateRelated","_context5","_ref13","_callee4","relatedModel","_context4","_x7","_x6","_x","_x2"],"mappings":"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"}