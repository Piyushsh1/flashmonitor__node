{"version":3,"file":"prisma-redis-middleware.cjs.development.js","sources":["../src/cacheMethods.ts","../src/index.ts"],"sourcesContent":["import type { PrismaMutationAction, PrismaQueryAction } from \"./types\";\n\nexport const defaultCacheMethods: PrismaQueryAction[] = [\n  \"findUnique\",\n  \"findFirst\",\n  \"findMany\",\n  \"count\",\n  \"aggregate\",\n  \"groupBy\",\n  \"findRaw\",\n  \"aggregateRaw\",\n];\n\nexport const defaultMutationMethods: PrismaMutationAction[] = [\n  \"create\",\n  \"createMany\",\n  \"update\",\n  \"updateMany\",\n  \"upsert\",\n  \"delete\",\n  \"deleteMany\",\n  \"executeRawUnsafe\",\n];\n","import { createCache } from \"async-cache-dedupe\";\n\nimport { defaultCacheMethods, defaultMutationMethods } from \"./cacheMethods\";\nimport type {\n  CreatePrismaRedisCache,\n  FetchFromPrisma,\n  Middleware,\n  MiddlewareParams,\n  PrismaAction,\n  PrismaMutationAction,\n  PrismaQueryAction,\n  Result,\n} from \"./types\";\n\nconst DEFAULT_CACHE_TIME = 0;\n\nexport const createPrismaRedisCache = ({\n  models,\n  onDedupe,\n  onError,\n  onHit,\n  onMiss,\n  storage,\n  cacheTime = DEFAULT_CACHE_TIME,\n  excludeModels = [],\n  excludeMethods = [],\n  transformer,\n}: CreatePrismaRedisCache) => {\n  // Default options for \"async-cache-dedupe\"\n  const cacheOptions = {\n    onDedupe,\n    onError,\n    onHit,\n    onMiss,\n    storage,\n    ttl: cacheTime,\n    transformer,\n  };\n\n  const cache: any = createCache(cacheOptions);\n\n  const middleware: Middleware = async (params, next) => {\n    let result: Result;\n\n    // This function is used by `async-cache-dedupe` to fetch data when the cache is empty\n    const fetchFromPrisma: FetchFromPrisma = async (params) => {\n      return next(params);\n    };\n\n    // Do not cache any Prisma method specified in the defaultExcludeCacheMethods option\n    const excludedCacheMethods: PrismaAction[] = defaultCacheMethods.filter((cacheMethod) => {\n      return excludeMethods.includes(cacheMethod);\n    });\n\n    // Do not cache any Prisma method that has been excluded\n    if (!excludedCacheMethods?.includes(params.action)) {\n      // Add a cache function for each model specified in the models option\n      models?.forEach(({ model, cacheTime, cacheKey, excludeMethods }) => {\n        // Only define the cache function for a model if it doesn't exist yet and hasn't been excluded\n        if (\n          !cache[model] &&\n          model === params.model &&\n          !excludeModels?.includes(params.model) &&\n          !excludeMethods?.includes(params.action as PrismaQueryAction)\n        ) {\n          cache.define(\n            model,\n            {\n              references: ({ params }: { params: MiddlewareParams }, key: string) => {\n                return [`${cacheKey || params.model}~${key}`];\n              },\n              ttl: cacheTime || cacheOptions.ttl,\n            },\n            async function modelsFetch({ cb, params }: { cb: FetchFromPrisma; params: MiddlewareParams }) {\n              result = await cb(params);\n\n              return result;\n            },\n          );\n        }\n      });\n\n      // For each defined model in `models` we check if they defined any caching methods to be excluded\n      const excludedCacheMethodsInModels = models?.find(({ model, excludeMethods }) => {\n        return model === params.model && excludeMethods?.length;\n      });\n\n      // Do not define a cache function for any Prisma model if it already exists\n      // Do not define the cache function for a model if it was excluded in `defaultExcludeCacheModels`\n      // Do not define a cache function if the Prisma method was exluded in `models`\n      if (\n        !cache[params.model] &&\n        !excludeModels?.includes(params.model) &&\n        !excludedCacheMethodsInModels?.excludeMethods?.includes(params.action as PrismaQueryAction)\n      ) {\n        cache.define(\n          params.model,\n          {\n            references: ({ params }: { params: MiddlewareParams }, key: string) => {\n              return [`${params.model}~${key}`];\n            },\n          },\n          async function modelFetch({ cb, params }: { cb: FetchFromPrisma; params: MiddlewareParams }) {\n            result = await cb(params);\n\n            return result;\n          },\n        );\n      }\n    }\n\n    // Get the cache function relating to the Prisma model\n    const cacheFunction = cache[params.model];\n\n    // Only cache the data if the Prisma model hasn't been excluded and if the Prisma method wasn't excluded either\n    if (\n      !excludeModels?.includes(params.model) &&\n      !excludedCacheMethods?.includes(params.action) &&\n      !defaultMutationMethods?.includes(params.action as PrismaMutationAction) &&\n      typeof cacheFunction === \"function\"\n    ) {\n      try {\n        result = await cacheFunction({ cb: fetchFromPrisma, params });\n      } catch (err) {\n        // If we fail to fetch it from the cache (network error, etc.) we will query it from the database\n        result = await fetchFromPrisma(params);\n\n        console.error(err);\n      }\n    } else {\n      // Query the database for any Prisma method (mutation method) or Prisma model we excluded from the cache\n      result = await fetchFromPrisma(params);\n\n      // If we successfully executed the Mutation we clear and invalidate the cache for the Prisma model\n      if (defaultMutationMethods.includes(params.action as PrismaMutationAction)) {\n        await cache.invalidateAll(`*${params.model}~*`);\n\n        await Promise.all(\n          (models || [])\n            .filter(({ model }) => model === params.model)\n            .map(async ({ invalidateRelated }) => {\n              if (invalidateRelated) {\n                await Promise.all(\n                  invalidateRelated.map(async (relatedModel) => cache.invalidateAll(`*${relatedModel}~*`)),\n                );\n              }\n            }),\n        );\n      }\n    }\n\n    return result;\n  };\n\n  return middleware;\n};\n"],"names":["defaultCacheMethods","defaultMutationMethods","DEFAULT_CACHE_TIME","createPrismaRedisCache","_ref","models","onDedupe","onError","onHit","onMiss","storage","_ref$cacheTime","cacheTime","_ref$excludeModels","excludeModels","_ref$excludeMethods","excludeMethods","transformer","cacheOptions","ttl","cache","createCache","middleware","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee6","params","next","result","fetchFromPrisma","excludedCacheMethods","_excludedCacheMethods","excludedCacheMethodsInModels","cacheFunction","wrap","_callee6$","_context6","prev","_ref3","_callee","_callee$","_context","abrupt","stop","_x3","apply","arguments","filter","cacheMethod","includes","action","forEach","_ref4","model","cacheKey","define","references","_ref5","key","_modelsFetch","_callee2","_ref6","cb","_callee2$","_context2","sent","modelsFetch","_x4","find","_ref7","length","_ref8","_modelFetch","_callee3","_ref9","_callee3$","_context3","modelFetch","_x5","t0","console","error","invalidateAll","Promise","all","_ref10","map","_ref12","_callee5","_ref11","invalidateRelated","_callee5$","_context5","_ref13","_callee4","relatedModel","_callee4$","_context4","_x7","_x6","_x","_x2"],"mappings":"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"}